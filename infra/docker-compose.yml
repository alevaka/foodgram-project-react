version: '3.3'
services:


  db:
    image: postgres:13.0-alpine
    volumes:
      - /var/lib/postgresql/data/
    env_file:
      - ./.env

  web:
    image: alevaka/foodgram:latest
    command: >
        bash -c "cd backend/foodgram/ &&
                 python manage.py migrate &&
                 python manage.py collectstatic --no-input &&
                 gunicorn foodgram.wsgi:application --bind 0:8000"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    restart: always
    env_file:
      - ./.env

  nginx:
    image: nginx:1.19.3

    ports:
      - "80:80"

    volumes:
      # При сборке скопировать созданный конфиг nginx из исходной директории 
      # в контейнер и сохранить его в директорию /etc/nginx/conf.d/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      # Контейнер nginx будет работать с данными, хранящиеся в томе static_value, 
      # через свою директорию /var/html/static/
      - static_value:/var/html/static/

      # Данные, хранящиеся в томе media_value, будут доступны в контейнере nginx
      # через директорию /var/html/media/
      - media_value:/var/html/media/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/

    depends_on:
      - web

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/build:/app/result_build/build/


volumes:
  static_value:
  media_value:

